<?xml version="1.0"?>
<!--
 Copyright (c) 2013 by Malte Isberner (https://github.com/misberner).
 
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>7</version>
	</parent>

	<groupId>com.github.misberner.ap-commons</groupId>
	<artifactId>ap-commons</artifactId>
	<version>0.0.3-SNAPSHOT</version>
	<packaging>jar</packaging>


	<name>Annotation Processing Commons</name>
	<description>
		A library with common functionalities for facilitating the implementation
		of Java annotation processors.
	</description>
	<url>https://github.com/misberner/ap-commons</url>
	<inceptionYear>2013</inceptionYear>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>


	<developers>
		<developer>
			<id>misberner</id>
			<name>Malte Isberner</name>
			<email>malte.isberner@gmail.com</email>
			<properties>
				<picUrl>
					http://www.gravatar.com/avatar/c44dc4164f1a9a597ec0c24425d1b89d.png
				</picUrl>
			</properties>
		</developer>
	</developers>

	<issueManagement>
		<url>https://github.com/misberner/ap-commons/issues</url>
		<system>GitHub Issues</system>
	</issueManagement>

	<!--  =============================== SCM =======================  -->
	<scm>
		<connection>scm:git:git@github.com:misberner/ap-commons.git</connection>
		<developerConnection>scm:git:git@github.com:misberner/ap-commons.git</developerConnection>
		<url>https://github.com/misberner/ap-commons/tree/master</url>
	</scm>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.source.version>1.7</java.source.version>
		<java.target.version>1.7</java.target.version>

		<compiler-plugin.version>3.1</compiler-plugin.version>
		<javadoc-plugin.version>2.9.1</javadoc-plugin.version>
		<site-plugin.version>3.3</site-plugin.version>
		<exec-plugin.version>1.2.1</exec-plugin.version>

		<deploy-site-github.exec>deploy-site-github</deploy-site-github.exec>
	</properties>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${compiler-plugin.version}</version>
					<configuration>
						<source>${java.source.version}</source>
						<target>${java.target.version}</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${site-plugin.version}</version>
					<executions>
						<execution>
							<id>attach-descriptor</id>
							<goals>
								<goal>attach-descriptor</goal>
							</goals>
						</execution>
						<execution>
							<id>default-site</id>
							<configuration>
								<skip>true</skip>
							</configuration>
						</execution>
					</executions>
					<configuration>
						<skipDeploy>true</skipDeploy>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<configuration>
						<!-- Automatically use the parent version for all submodules, do not prompt for each one -->
						<autoVersionSubmodules>true</autoVersionSubmodules>
						<!-- Perform an install into the local repository, otherwise the javadoc plugin and archetype integration tests will fail -->
						<preparationGoals>clean install</preparationGoals>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>${exec-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<!-- Deploy site @ GitHub pages -->
					<!--
						Note: In order to be able to deploy the Maven site,
						you need the script deploy-site-github to reside
						in your PATH, or manually specify the path to the
						executable script using the "deploy-site-github.exec"
						property.
						You can download the shell script from this URL:
						https://raw.github.com/misberner/shell-scripts/master/maven/deploy-site-github.sh
					-->
					<execution>
						<id>deploy-site-github</id>
						<inherited>false</inherited>
						<phase>site-deploy</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>${deploy-site-github.exec}</executable>
							<workingDirectory>${project.basedir}</workingDirectory>
							<arguments>
								<argument>-p</argument> <!-- Purge contents before copying -->
								<argument>-P/maven-site</argument>
								<argument>-V</argument>
								<argument>-l</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${javadoc-plugin.version}</version>
				<reportSets>
					<reportSet>
						<id>default</id>
						<reports>
							<report>javadoc</report>
							<report>test-javadoc</report>
						</reports>
					</reportSet>
					<reportSet>
						<id>aggregate</id>
						<reports>
							<report>aggregate</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>

	<distributionManagement>
		<!-- Dummy - this will NOT actually be used, but is required for mvn site:stage -->
		<!-- Use build-tools/deploy-site.sh for site deployment on GitHub pages -->
		<site>
			<id>local</id>
			<url>file://${user.home}/maven-sites/${project.groupId}-site</url>
		</site>
	</distributionManagement>

</project>
